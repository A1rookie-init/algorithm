# -*- coding: utf-8 -*-
"""BOJ_11724.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/115K00SsLCV_kNbWvJ3rZyAFX5a35X67w
"""

# dfs는 runtimeError(recurrsionError)발생으로 bfs로 풀이함
import sys
from collections import deque

st_input = sys.stdin.readline # 함수자체를 변수에 저장

def dfs(vertex, graph, visited):
  visited[vertex] = True
  # print(vertex, end='-')
  for i in graph[vertex]:
    if not visited[i]:
      dfs(i, graph, visited)

def bfs(start, graph, visited):
  visited[start] = True
  queue = deque([start])
  while queue:
    vertex = queue.popleft()
  # print(vertex, end='-')
    for i in graph[vertex]:
      if not visited[i]:
        visited[i] = True
        queue.append(i)

if __name__ == '__main__':

  v_num, e_num = map(int, input().split())
  graph = [[] for i in range(v_num + 1)]
  # 정점번호 1부터 시작한다니까 idx 0은 비워두자

  visited = [False] * (v_num + 1) # 방문여부는 정점을 기준으로

  for _ in range(e_num):
    x, y = map(int, st_input().split())
    graph[x].append(y)
    graph[y].append(x)

  cnt = 0
  for vertex in range(1, v_num + 1):
    if not visited[vertex]:
      bfs(vertex, graph, visited)
      cnt += 1
  print(cnt)